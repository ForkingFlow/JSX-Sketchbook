@import "normalize.css";

:root
  --size 40
  --rotation-y -24
  --rotation-x -32

*
*:after
*:before
  box-sizing border-box
  transform-style preserve-3d
  touch-action none

body
  min-height 100vh
  display grid
  place-items center

.scene
  position relative
  transform translate3d(0, 0, 100vmin) rotateX(calc(var(--rotation-y, 0) * 1deg)) rotateY(calc(var(--rotation-x, 0) * 1deg)) rotateX(90deg)
  
.my-first-cuboid
  --depth 50
  --color blue
  width 50vmin
  aspect-ratio 1
  


// Boilerplate stuff
.cuboid
  width 100%
  height 100%
  position relative
  // 1 is the top and go t, r, back, l, f, b

  &__side
    background var(--color)
    filter brightness(var(--b, 1))
    position absolute

  &__side:nth-of-type(1)
    --b 1.1
    height calc(var(--depth, 20) * 1vmin)
    width 100%
    top 0
    transform translate(0, -50%) rotateX(90deg)

  &__side:nth-of-type(2)
    --b 0.9
    height 100%
    width calc(var(--depth, 20) * 1vmin)
    top 50%
    right 0
    transform translate(50%, -50%) rotateY(90deg)

  &__side:nth-of-type(3)
    --b 0.5
    width 100%
    height calc(var(--depth, 20) * 1vmin)
    bottom 0
    transform translate(0%, 50%) rotateX(90deg)

  &__side:nth-of-type(4)
    --b 1
    height 100%
    width calc(var(--depth, 20) * 1vmin)
    left 0
    top 50%
    transform translate(-50%, -50%) rotateY(90deg)

  &__side:nth-of-type(5)
    --b 0.8
    height 100%
    width 100%
    transform translate3d(0, 0, calc(var(--depth, 20) * 0.5vmin))
    top 0
    left 0

  &__side:nth-of-type(6)
    --b 1.2
    height 100%
    width 100%
    transform translate3d(0, 0, calc(var(--depth, 20) * -0.5vmin)) rotateY(180deg)
    top 0
    left 0

.cylinder
  --bg 'hsl(%s, 100%, 50%)' % var(--hue)
  height 100%
  width 100%
  position relative

  &__segment
    filter brightness(var(--b, 1))
    background var(--bg, hsl(0, 80%, 50%))
    position absolute
    top 50%
    left 50%

  // Top
  &__end
    --b 1.2
    --end-coefficient 0.5
    height 100%
    width 100%
    border-radius 50%
    opacity calc(1 - var(--remove))
    transform translate3d(-50%, -50%, calc((var(--depth, 0) * var(--end-coefficient)) * 1vmin))
    transition opacity 0.2s

  &__end--bottom
    --b 0.8
    --end-coefficient -0.5

  &__side
    --b 0.89
    height calc(var(--depth, 30) * 1vmin)
    width calc(var(--side) * 1vmin)
    transform translate(-50%, -50%) rotateX(90deg) rotateY(calc((var(--index, 0) * 360 / var(--sides)) * 1deg)) translate3d(50%, 0, calc((var(--radius) * (var(--cylinder-projection, 100) / 100)) * 1vmin))

